name: Debian Package Build

on:
  push:
    branches:
      - 'main'

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Build matrix
        id: set-matrix
        run: |
          git_tmp_dir=$(mktemp -d /tmp/distro-info-data-XXXXX)
          git clone --depth 1 https://salsa.debian.org/debian/distro-info-data "${git_tmp_dir}"

          releases=()

          for release in $(awk -F ',' -v today="$(date --utc "+%F")" \
              'BEGIN {OFS=","} NR>1 { if (($6 == "" || $6 >= today) && ($5 != "" && $5 <= today)) print $3 }' \
              "${git_tmp_dir}/ubuntu.csv"); do
              releases+=("ubuntu:${release}")
          done

          for release in $(awk -F ',' -v today="$(date --utc "+%F")" \
              'BEGIN {OFS=","} NR>1 { if (($6 == "" || $6 >= today) && ($4 != "" && $4 <= today)) print $3 }' \
              "${git_tmp_dir}/debian.csv" | grep -v -E "(sid|experimental)"); do
              releases+=("debian:${release}")
          done

          matrix=$(printf "%s\n" "${releases[@]}" | jq -nRc '[inputs]')

          echo "::set-output name=matrix::${matrix}"

  build-package:
    runs-on: ubuntu-latest
    needs: build-matrix
    container:
      image: ${{ matrix.target }}
    strategy:
      matrix:
        arch:
          - amd64
        target: ${{ fromJson(needs.build-matrix.outputs.matrix) }}
        package:
          - rdma-core
      max-parallel: 1
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          apt-get update
          apt-get -y upgrade
          apt-get -y install git devscripts dpkg-dev debhelper equivs
      - name: Build package
        run: |
          ./${{ matrix.package }}/boot.sh
          mk-build-deps -i -r -t 'apt-get -f -y --force-yes'
          dpkg-buildpackage -b -us -uc -rfakeroot -j4
      - name: Store packages
        run: |
          dirname=$(echo ${{ matrix.target }} | tr ':' '_')
          mkdir -p packages/${dirname}
          cp *.deb packages/${dirname}/
      - name: Publish packages to cloudsmith
        uses: wanduow/action-cloudsmith-upload-packages@v1.1
        with:
          path: packages/
          repo: wand/openvswitch
          username: brad-cowie
          api_key: ${{ secrets.CLOUDSMITH_API_KEY }}
